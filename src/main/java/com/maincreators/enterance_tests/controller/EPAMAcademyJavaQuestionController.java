package com.maincreators.enterance_tests.controller;

import com.maincreators.enterance_tests.domain.EPAMJavaQuestion;
import com.maincreators.enterance_tests.repository.EPAMJavaQuestionRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.time.Duration;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@PreAuthorize("hasAuthority('USER') || hasAuthority('ADMIN') || hasAuthority('CREATOR')")
//перед виконанням методу перевірити наявність прав у користувача
@Controller
public class EPAMAcademyJavaQuestionController {

    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
//    @Autowired
//    private EnglishGrammarRuleRepository englishGrammarRuleRepository;

    @Autowired
    private EPAMJavaQuestionRepository epamJavaQuestionRepository;

    @Value("${epamjavaupload.path}")
    private String epamjavauploadPath;

    private Instant now = Instant.now(); //current date
    private Instant now_minus_ten_years = now.minus(Duration.ofDays(3600)); //current date minus 3600 days
    private Instant now_plus_one_day = now.plus(Duration.ofDays(1)); //current date plus 1 day

    private Date createdafter = Date.from(now_minus_ten_years);
    private Date createdbefore = Date.from(now_plus_one_day);
    private Date updatedafter = Date.from(now_minus_ten_years);
    private Date updatedbefore = Date.from(now_plus_one_day);

    @GetMapping("/epam-academy-java-test")
    public String question(Model model) {

        List <EPAMJavaQuestion> questions = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenOrderByIdAsc(
                createdafter, createdbefore, updatedafter, updatedbefore);

        model.addAttribute("questions", questions);

        return "primary-test";
    }

    @PostMapping("/epam-academy-java-test-search")
    public String questionsearch(@RequestParam String where,
                                 @RequestParam String what,
                                 @RequestParam String text,
                                 @RequestParam @DateTimeFormat(pattern = "yyyy-MM-dd") Date createdafterdate,
                                 @RequestParam @DateTimeFormat(pattern = "yyyy-MM-dd") Date createdbeforedate,
                                 @RequestParam @DateTimeFormat(pattern = "yyyy-MM-dd") Date updatedafterdate,
                                 @RequestParam @DateTimeFormat(pattern = "yyyy-MM-dd") Date updatedbeforedate,
                                 Model model) {
        List <EPAMJavaQuestion> questions;//об'ява елемента List (головного який піде в model)

        List <EPAMJavaQuestion> questionsAAA;//об'ява елемента List (допоміжного)
        List <EPAMJavaQuestion> questionsAAB;//сортування по тексту питання
        List <EPAMJavaQuestion> questionsAAC;
        List <EPAMJavaQuestion> questionsAAD;
        List <EPAMJavaQuestion> questionsAAE;
        List <EPAMJavaQuestion> questionsAAF;
        List <EPAMJavaQuestion> questionsAAG;
        List <EPAMJavaQuestion> questionsAAH;
        List <EPAMJavaQuestion> questionsAAI;
        List <EPAMJavaQuestion> questionsAAJ;

        List <EPAMJavaQuestion> questions000;//об'ява елемента List (допоміжного)
        List <EPAMJavaQuestion> questions100;//сортування по варіанту відповіді
        List <EPAMJavaQuestion> questions200;
        List <EPAMJavaQuestion> questions300;
        List <EPAMJavaQuestion> questions400;
        List <EPAMJavaQuestion> questions500;
        List <EPAMJavaQuestion> questions600;
        List <EPAMJavaQuestion> questions700;
        List <EPAMJavaQuestion> questions800;
        List <EPAMJavaQuestion> questions900;

        String questiontext = text;
        String optiontext = text;
        String optioncheck = what;//can be: all/true/unknown
        String probable;

        if (optioncheck.equals("unknown")) {
            probable = "probable";
        } else {
            probable = null;
        }

        Instant createdafter = createdafterdate.toInstant();//перетворює данні типу Date в данні типу Instant
        Instant createdafterdateminusoneday = createdafter.minus(Duration.ofDays(1));//віднімає 1 день
        createdafterdate = Date.from(createdafterdateminusoneday);//перетворює данні типу Instant в данні типу Date

        Instant createdbefore = createdbeforedate.toInstant();
        Instant createdbeforedateplusoneday = createdbefore.plus(Duration.ofDays(1));
        createdbeforedate = Date.from(createdbeforedateplusoneday);

        Instant updatedafter = updatedafterdate.toInstant();
        Instant updatedafterdateminusoneday = updatedafter.minus(Duration.ofDays(1));
        updatedafterdate = Date.from(updatedafterdateminusoneday);

        Instant updatedbefore = updatedbeforedate.toInstant();
        Instant updatedbeforedateplusoneday = updatedbefore.plus(Duration.ofDays(1));
        updatedbeforedate = Date.from(updatedbeforedateplusoneday);

        //сортувати по вмісту питання та/або відповіді (текст НЕ ПУСТИЙ, тип відповіді ALL)
        if ((where.equals("everywhere")) && (what.equals("all")) && (!text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext);
            questions000 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions100 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions200 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions300 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions400 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions500 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions600 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions700 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions800 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions900 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            newList.addAll(questions000);
            newList.addAll(questions100);
            newList.addAll(questions200);
            newList.addAll(questions300);
            newList.addAll(questions400);
            newList.addAll(questions500);
            newList.addAll(questions600);
            newList.addAll(questions700);
            newList.addAll(questions800);
            newList.addAll(questions900);
            questions = newList;

            //сортувати по вмісту питання та/або відповіді (текст ПУСТИЙ, тип відповіді ALL)
        } else if ((where.equals("everywhere")) && (what.equals("all")) && (text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetween(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            questions = newList;

            //сортувати по вмісту питання та/або відповіді (текст НЕ ПУСТИЙ, тип відповіді TRUE)
        } else if ((where.equals("everywhere")) && (what.equals("true")) && (!text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption0checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAB = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption1checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAC = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption2checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAD = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption3checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAE = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption4checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAF = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption5checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAG = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption6checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAH = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption7checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAI = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption8checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAJ = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption9checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions000 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsLikeAndOption0checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions100 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsLikeAndOption1checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions200 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsLikeAndOption2checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions300 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsLikeAndOption3checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions400 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsLikeAndOption4checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions500 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsLikeAndOption5checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions600 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsLikeAndOption6checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions700 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsLikeAndOption7checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions800 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsLikeAndOption8checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions900 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsLikeAndOption9checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            newList.addAll(questionsAAB);
            newList.addAll(questionsAAC);
            newList.addAll(questionsAAD);
            newList.addAll(questionsAAE);
            newList.addAll(questionsAAF);
            newList.addAll(questionsAAG);
            newList.addAll(questionsAAH);
            newList.addAll(questionsAAI);
            newList.addAll(questionsAAJ);
            newList.addAll(questions000);
            newList.addAll(questions100);
            newList.addAll(questions200);
            newList.addAll(questions300);
            newList.addAll(questions400);
            newList.addAll(questions500);
            newList.addAll(questions600);
            newList.addAll(questions700);
            newList.addAll(questions800);
            newList.addAll(questions900);
            questions = newList;

            //сортувати по вмісту питання та/або відповіді (текст ПУСТИЙ, тип відповіді TRUE)
        } else if ((where.equals("everywhere")) && (what.equals("true")) && (text.isEmpty())) {
            questions000 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0checkIsLikeAndOption0textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions100 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1checkIsLikeAndOption1textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions200 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2checkIsLikeAndOption2textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions300 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3checkIsLikeAndOption3textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions400 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4checkIsLikeAndOption4textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions500 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5checkIsLikeAndOption5textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions600 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6checkIsLikeAndOption6textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions700 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7checkIsLikeAndOption7textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions800 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8checkIsLikeAndOption8textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions900 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9checkIsLikeAndOption9textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questions000);
            newList.addAll(questions100);
            newList.addAll(questions200);
            newList.addAll(questions300);
            newList.addAll(questions400);
            newList.addAll(questions500);
            newList.addAll(questions600);
            newList.addAll(questions700);
            newList.addAll(questions800);
            newList.addAll(questions900);
            questions = newList;

            //сортувати по вмісту питання та/або відповіді (текст НЕ ПУСТИЙ, тип відповіді UNKNOWN/PROBABLE)
        } else if ((where.equals("everywhere")) && (what.equals("unknown")) && (!text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption9checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption9checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsLikeAndOption9checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsLikeAndOption9checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,

                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,

                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,

                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            questions = newList;

            //сортувати по вмісту питання та/або відповіді (текст ПУСТИЙ, тип відповіді UNKNOWN/PROBABLE)
        } else if ((where.equals("everywhere")) && (what.equals("unknown")) && (text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsNotLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsNotLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsNotLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsNotLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsNotLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsNotLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsNotLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsNotLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsNotLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsNotLikeAndOption9checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsNotLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsNotLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsNotLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsNotLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsNotLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsNotLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsNotLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsNotLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsNotLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsNotLikeAndOption9checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,

                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            questions = newList;

            //сортувати по вмісту питання (текст НЕ ПУСТИЙ, тип відповіді ALL)
        } else if ((where.equals("question")) && (what.equals("all")) && (!text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            questions = newList;

            //сортувати по вмісту питання (текст ПУСТИЙ, тип відповіді ALL)
        } else if ((where.equals("question")) && (what.equals("all")) && (text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetween(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            questions = newList;

            //сортувати по вмісту питання (текст НЕ ПУСТИЙ, тип відповіді TRUE)
        } else if ((where.equals("question")) && (what.equals("true")) && (!text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption0checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAB = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption1checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAC = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption2checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAD = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption3checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAE = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption4checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAF = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption5checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAG = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption6checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAH = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption7checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAI = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption8checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questionsAAJ = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption9checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            newList.addAll(questionsAAB);
            newList.addAll(questionsAAC);
            newList.addAll(questionsAAD);
            newList.addAll(questionsAAE);
            newList.addAll(questionsAAF);
            newList.addAll(questionsAAG);
            newList.addAll(questionsAAH);
            newList.addAll(questionsAAI);
            newList.addAll(questionsAAJ);
            questions = newList;

            //сортувати по вмісту питання (текст ПУСТИЙ, тип відповіді TRUE)
        } else if ((where.equals("question")) && (what.equals("true")) && (text.isEmpty())) {
            questions000 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0checkIsLikeAndOption0textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions100 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1checkIsLikeAndOption1textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions200 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2checkIsLikeAndOption2textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions300 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3checkIsLikeAndOption3textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions400 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4checkIsLikeAndOption4textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions500 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5checkIsLikeAndOption5textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions600 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6checkIsLikeAndOption6textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions700 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7checkIsLikeAndOption7textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions800 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8checkIsLikeAndOption8textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions900 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9checkIsLikeAndOption9textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questions000);
            newList.addAll(questions100);
            newList.addAll(questions200);
            newList.addAll(questions300);
            newList.addAll(questions400);
            newList.addAll(questions500);
            newList.addAll(questions600);
            newList.addAll(questions700);
            newList.addAll(questions800);
            newList.addAll(questions900);
            questions = newList;

            //сортувати по вмісту питання (текст НЕ ПУСТИЙ, тип відповіді UNKNOWN/PROBABLE)
        } else if ((where.equals("question")) && (what.equals("unknown")) && (!text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption9checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndQuestiontextIsLikeAndOption9checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck,

                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, probable);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            questions = newList;

            //сортувати по вмісту питання (текст ПУСТИЙ, тип відповіді UNKNOWN/PROBABLE)
        } else if ((where.equals("question")) && (what.equals("unknown")) && (text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsNotLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsNotLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsNotLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsNotLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsNotLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsNotLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsNotLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsNotLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsNotLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsNotLikeAndOption9checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsNotLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsNotLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsNotLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsNotLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsNotLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsNotLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsNotLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsNotLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsNotLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsNotLikeAndOption9checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,

                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            questions = newList;

            //сортувати по вмісту відповіді (текст НЕ ПУСТИЙ, тип відповіді ALL)
        } else if ((where.equals("option")) && (what.equals("all")) && (!text.isEmpty())) {
            questions000 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions100 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions200 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions300 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions400 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions500 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions600 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions700 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions800 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            questions900 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questions000);
            newList.addAll(questions100);
            newList.addAll(questions200);
            newList.addAll(questions300);
            newList.addAll(questions400);
            newList.addAll(questions500);
            newList.addAll(questions600);
            newList.addAll(questions700);
            newList.addAll(questions800);
            newList.addAll(questions900);
            questions = newList;

            //сортувати по вмісту відповіді (текст ПУСТИЙ, тип відповіді ALL)
        } else if ((where.equals("option")) && (what.equals("all")) && (text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetween(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            questions = newList;

            //сортувати по вмісту відповіді (текст НЕ ПУСТИЙ, тип відповіді TRUE)
        } else if ((where.equals("option")) && (what.equals("true")) && (!text.isEmpty())) {
            questions000 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsLikeAndOption0checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions100 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsLikeAndOption1checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions200 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsLikeAndOption2checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions300 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsLikeAndOption3checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions400 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsLikeAndOption4checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions500 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsLikeAndOption5checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions600 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsLikeAndOption6checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions700 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsLikeAndOption7checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions800 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsLikeAndOption8checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            questions900 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsLikeAndOption9checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, questiontext, optioncheck);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questions000);
            newList.addAll(questions100);
            newList.addAll(questions200);
            newList.addAll(questions300);
            newList.addAll(questions400);
            newList.addAll(questions500);
            newList.addAll(questions600);
            newList.addAll(questions700);
            newList.addAll(questions800);
            newList.addAll(questions900);
            questions = newList;

            //сортувати по вмісту відповіді (текст ПУСТИЙ, тип відповіді TRUE)
        } else if ((where.equals("option")) && (what.equals("true")) && (text.isEmpty())) {
            questions000 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0checkIsLikeAndOption0textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions100 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1checkIsLikeAndOption1textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions200 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2checkIsLikeAndOption2textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions300 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3checkIsLikeAndOption3textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions400 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4checkIsLikeAndOption4textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions500 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5checkIsLikeAndOption5textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions600 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6checkIsLikeAndOption6textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions700 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7checkIsLikeAndOption7textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions800 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8checkIsLikeAndOption8textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            questions900 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9checkIsLikeAndOption9textIsNotLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optioncheck, "");
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questions000);
            newList.addAll(questions100);
            newList.addAll(questions200);
            newList.addAll(questions300);
            newList.addAll(questions400);
            newList.addAll(questions500);
            newList.addAll(questions600);
            newList.addAll(questions700);
            newList.addAll(questions800);
            newList.addAll(questions900);
            questions = newList;

            //сортувати по вмісту відповіді (текст НЕ ПУСТИЙ, тип відповіді UNKNOWN/PROBABLE)
        } else if ((where.equals("option")) && (what.equals("unknown")) && (!text.isEmpty())) {
            questions000 = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsLikeAndOption9checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsLikeAndOption9checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, optioncheck,

                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, optiontext, probable);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questions000);
            questions = newList;

            //сортувати по вмісту відповіді (текст ПУСТИЙ, тип відповіді UNKNOWN/PROBABLE)
        } else if ((where.equals("option")) && (what.equals("unknown")) && (text.isEmpty())) {
            questionsAAA = epamJavaQuestionRepository.findByDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsNotLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsNotLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsNotLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsNotLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsNotLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsNotLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsNotLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsNotLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsNotLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsNotLikeAndOption9checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption0textIsNotLikeAndOption0checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption1textIsNotLikeAndOption1checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption2textIsNotLikeAndOption2checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption3textIsNotLikeAndOption3checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption4textIsNotLikeAndOption4checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption5textIsNotLikeAndOption5checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption6textIsNotLikeAndOption6checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption7textIsNotLikeAndOption7checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption8textIsNotLikeAndOption8checkIsLikeOrDateofcreateIsBetweenAndDateoflastchangeIsBetweenAndOption9textIsNotLikeAndOption9checkIsLike(
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", optioncheck,

                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable,
                    createdafterdate, createdbeforedate, updatedafterdate, updatedbeforedate, "", probable);
            List <EPAMJavaQuestion> newList = new ArrayList <EPAMJavaQuestion>(questionsAAA);
            questions = newList;

        } else {

            return "error";
        }

        model.addAttribute("questions", questions);

        return "primary-test";
    }

}